// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewStorageServiceTraceProbabilityPostParams creates a new StorageServiceTraceProbabilityPostParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewStorageServiceTraceProbabilityPostParams() *StorageServiceTraceProbabilityPostParams {
	return &StorageServiceTraceProbabilityPostParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewStorageServiceTraceProbabilityPostParamsWithTimeout creates a new StorageServiceTraceProbabilityPostParams object
// with the ability to set a timeout on a request.
func NewStorageServiceTraceProbabilityPostParamsWithTimeout(timeout time.Duration) *StorageServiceTraceProbabilityPostParams {
	return &StorageServiceTraceProbabilityPostParams{
		timeout: timeout,
	}
}

// NewStorageServiceTraceProbabilityPostParamsWithContext creates a new StorageServiceTraceProbabilityPostParams object
// with the ability to set a context for a request.
func NewStorageServiceTraceProbabilityPostParamsWithContext(ctx context.Context) *StorageServiceTraceProbabilityPostParams {
	return &StorageServiceTraceProbabilityPostParams{
		Context: ctx,
	}
}

// NewStorageServiceTraceProbabilityPostParamsWithHTTPClient creates a new StorageServiceTraceProbabilityPostParams object
// with the ability to set a custom HTTPClient for a request.
func NewStorageServiceTraceProbabilityPostParamsWithHTTPClient(client *http.Client) *StorageServiceTraceProbabilityPostParams {
	return &StorageServiceTraceProbabilityPostParams{
		HTTPClient: client,
	}
}

/*
StorageServiceTraceProbabilityPostParams contains all the parameters to send to the API endpoint

	for the storage service trace probability post operation.

	Typically these are written to a http.Request.
*/
type StorageServiceTraceProbabilityPostParams struct {

	/* Probability.

	   [0,1] will enable tracing on a partial number of requests with the provided probability. 0 will disable tracing and 1 will enable tracing for all requests (which mich severely cripple the system)
	*/
	Probability string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the storage service trace probability post params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *StorageServiceTraceProbabilityPostParams) WithDefaults() *StorageServiceTraceProbabilityPostParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the storage service trace probability post params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *StorageServiceTraceProbabilityPostParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the storage service trace probability post params
func (o *StorageServiceTraceProbabilityPostParams) WithTimeout(timeout time.Duration) *StorageServiceTraceProbabilityPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the storage service trace probability post params
func (o *StorageServiceTraceProbabilityPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the storage service trace probability post params
func (o *StorageServiceTraceProbabilityPostParams) WithContext(ctx context.Context) *StorageServiceTraceProbabilityPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the storage service trace probability post params
func (o *StorageServiceTraceProbabilityPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the storage service trace probability post params
func (o *StorageServiceTraceProbabilityPostParams) WithHTTPClient(client *http.Client) *StorageServiceTraceProbabilityPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the storage service trace probability post params
func (o *StorageServiceTraceProbabilityPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProbability adds the probability to the storage service trace probability post params
func (o *StorageServiceTraceProbabilityPostParams) WithProbability(probability string) *StorageServiceTraceProbabilityPostParams {
	o.SetProbability(probability)
	return o
}

// SetProbability adds the probability to the storage service trace probability post params
func (o *StorageServiceTraceProbabilityPostParams) SetProbability(probability string) {
	o.Probability = probability
}

// WriteToRequest writes these params to a swagger request
func (o *StorageServiceTraceProbabilityPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param probability
	qrProbability := o.Probability
	qProbability := qrProbability
	if qProbability != "" {

		if err := r.SetQueryParam("probability", qProbability); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
